// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ test-email-simple.js
const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ backend —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ email');
console.log('üìù –ö–æ–º–∞–Ω–¥–∞: node test-email-simple.js');
console.log('‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:', new Date().toLocaleString('ru-RU'));
console.log('=' .repeat(60));

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
  if (!fs.existsSync('./test-email-simple.js')) {
    console.error('‚ùå –§–∞–π–ª test-email-simple.js –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    process.exit(1);
  }

  console.log('‚úÖ –§–∞–π–ª test-email-simple.js –Ω–∞–π–¥–µ–Ω');
  console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç...\n');

  // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç
  const output = execSync('node test-email-simple.js', {
    encoding: 'utf8',
    stdio: 'pipe',
    timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
  });

  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –í–´–ü–û–õ–ù–ï–ù–ò–Ø:');
  console.log('-' .repeat(40));
  console.log(output);
  console.log('-' .repeat(40));
  console.log('‚úÖ –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

} catch (error) {
  console.error('‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –í–´–ü–û–õ–ù–ï–ù–ò–ò –¢–ï–°–¢–ê:');
  console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω');
  
  if (error.stdout) {
    console.log('\nüì§ STDOUT:');
    console.log(error.stdout);
  }
  
  if (error.stderr) {
    console.error('\nüì• STDERR:');
    console.error(error.stderr);
  }
  
  if (error.message) {
    console.error('\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:');
    console.error(error.message);
  }
}

console.log('\n‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:', new Date().toLocaleString('ru-RU'));