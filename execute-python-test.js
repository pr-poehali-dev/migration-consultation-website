const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Python —Ç–µ—Å—Ç–∞ Telegram –±–æ—Ç–∞');
console.log('========================================');

try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python...');
    const pythonVersion = execSync('python3 --version', { encoding: 'utf8' });
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω: ${pythonVersion.trim()}`);
    
    console.log('\nüêç –ó–∞–ø—É—Å–∫ Python —Ç–µ—Å—Ç–∞...\n');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º Python —Ç–µ—Å—Ç
    const output = execSync('python3 test-telegram.py', { 
        encoding: 'utf8',
        stdio: 'pipe'
    });
    
    console.log(output);
    console.log('‚úÖ Python —Ç–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ Python —Ç–µ—Å—Ç–∞:');
    console.error(`–ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.status}`);
    
    if (error.stdout) {
        console.log('\nüì§ STDOUT:');
        console.log(error.stdout);
    }
    
    if (error.stderr) {
        console.error('\nüì§ STDERR:');
        console.error(error.stderr);
    }
    
    // –ï—Å–ª–∏ Python –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
    if (error.message.includes('python3') && error.message.includes('not found')) {
        console.log('\nüîß Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã...');
        
        try {
            console.log('üåê –ü—Ä–æ–±—É–µ–º curl...');
            const curlOutput = execSync('curl --version', { encoding: 'utf8' });
            console.log(`‚úÖ Curl –¥–æ—Å—Ç—É–ø–µ–Ω: ${curlOutput.split('\n')[0]}`);
            
            console.log('\nüåê –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ curl —Ç–µ—Å—Ç–∞...');
            const curlTest = execSync('bash curl-telegram-test.sh', { 
                encoding: 'utf8',
                stdio: 'pipe'
            });
            console.log(curlTest);
            console.log('‚úÖ Curl —Ç–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!');
            
        } catch (curlError) {
            console.error('‚ùå Curl —Ç–∞–∫–∂–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
            
            // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - JavaScript —Ç–µ—Å—Ç
            try {
                console.log('\nüü¢ –ü—Ä–æ–±—É–µ–º Node.js —Ç–µ—Å—Ç...');
                const nodeOutput = execSync('node test-telegram.js', { 
                    encoding: 'utf8',
                    stdio: 'pipe'
                });
                console.log(nodeOutput);
                console.log('‚úÖ Node.js —Ç–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!');
                
            } catch (nodeError) {
                console.error('‚ùå Node.js —Ç–µ—Å—Ç —Ç–∞–∫–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π');
                console.error('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
            }
        }
    }
}

console.log('\nüèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞');