#!/usr/bin/env bun

// –¢–µ—Å—Ç Telegram –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ fetch –≤ Bun
console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞');
console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: Bun runtime');

const testData = {
  name: '–¢–µ—Å—Ç –ò–≤–∞–Ω–æ–≤',
  phone: '+7 912 345 67 89',
  messenger: 'whatsapp',
  service: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –†–í–ü',
  message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –±–æ—Ç–∞',
  urgentConsultation: true,
  price: 3500,
  timestamp: new Date().toLocaleString('ru-RU')
};

console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
console.log(JSON.stringify(testData, null, 2));
console.log('\n‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å...\n');

try {
  const response = await fetch('https://functions.poehali.dev/a9299a8a-df29-4247-808f-4903c8fb7c42', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(testData)
  });

  console.log(`‚úÖ HTTP —Å—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}`);
  
  // –ü–æ–ª—É—á–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
  console.log('\nüìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:');
  for (const [key, value] of response.headers.entries()) {
    console.log(`   ${key}: ${value}`);
  }
  
  const result = await response.text();
  console.log('\nüì® –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:');
  
  try {
    const jsonResult = JSON.parse(result);
    console.log(JSON.stringify(jsonResult, null, 2));
  } catch (e) {
    console.log('–û—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:');
    console.log(`"${result}"`);
  }

  console.log('\nüìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:');
  if (response.ok) {
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å: –£–°–ü–ï–• (HTTP 2xx)');
    console.log('üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram —á–∞—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
  } else {
    console.log('‚ùå –°—Ç–∞—Ç—É—Å: –û–®–ò–ë–ö–ê');
    console.log(`   HTTP –∫–æ–¥: ${response.status}`);
    console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${response.statusText}`);
  }

} catch (error) {
  console.error('\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:');
  console.error(`   –¢–∏–ø –æ—à–∏–±–∫–∏: ${error.constructor.name}`);
  console.error(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
  
  if (error.cause) {
    console.error(`   –ü—Ä–∏—á–∏–Ω–∞: ${error.cause}`);
  }
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü–†–û–í–ê–õ - —Å–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞');
}

console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');