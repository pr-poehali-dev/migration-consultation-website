const { execSync } = require('child_process');

// –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –µ—Å–ª–∏ –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –µ–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
console.log('üöÄ –ò–ú–ò–¢–ê–¶–ò–Ø –í–´–ü–û–õ–ù–ï–ù–ò–Ø: node test-telegram.js');
console.log('='.repeat(60));
console.log('üìÖ –í—Ä–µ–º—è:', new Date().toLocaleString('ru-RU'));
console.log('');

try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    const result = execSync('node final-test-runner.js', {
        encoding: 'utf8',
        stdio: 'pipe',
        timeout: 60000,
        maxBuffer: 1024 * 1024
    });
    
    console.log(result);
    
} catch (error) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ, —á—Ç–æ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å
    if (error.stdout) {
        console.log('üì§ –í–´–í–û–î –ü–†–û–ì–†–ê–ú–ú–´:');
        console.log(error.stdout);
    }
    
    if (error.stderr) {
        console.log('\nüì§ –û–®–ò–ë–ö–ò:');
        console.log(error.stderr);
    }
    
    console.log('\nüìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –û–®–ò–ë–ö–ï:');
    console.log(`   –ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${error.status}`);
    console.log(`   –°–∏–≥–Ω–∞–ª: ${error.signal || '–Ω–µ—Ç'}`);
    console.log(`   –¢–∏–ø –æ—à–∏–±–∫–∏: ${error.constructor.name}`);
    
    if (error.killed) {
        console.log('   ‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –±—ã–ª –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
    }
    
    if (error.status !== 0 && error.status !== null) {
        console.log(`   ‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏: ${error.status}`);
    }
}

console.log('\nüèÅ –í–´–ü–û–õ–ù–ï–ù–ò–ï –ö–û–ú–ê–ù–î–´ –ó–ê–í–ï–†–®–ï–ù–û');